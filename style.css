/* variable */
:root {
    --fontBase: 16px;
    --fontHead: 'Titillium Web', sans-serif;
    --fontBody: 'Noto Sans', sans-serif;
    --fontCode: 'Fira Mono', sans-serif;
    --unicode: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
    --fontA: .938rem;
    --fontD: .875rem;
    --fontM: .813rem;
    --fontMM: .75rem;
    --h-fontW: 600;
    --h1: 2rem;
    --h2: 1.9rem;
    --h3: 1.75rem;
    --h4: 1.7rem;
    --h5: 1.6rem;
    --h6: 1.55rem;
}

.nB {
    /* var: palette */
    --coreT-prim: #191919;
    --coreT-dim: #585B63;
    --coreLink: #3740FF;
    --coreBg: #FFFDFC;
    --coreBg-dim: #F8F9FA;
    --coreBg-gray: #D2D3D7;
    --coreBg-pop: rgb(255 253 252 / 50%);
    --coreBd-color: #323232;
    --darkT-prim: #F8F9FA;
    --darkT-dim: #D2D3D7;
    --darkLink: #6001FF;
    --darkBg: #202124;
    --darkBg-dim: #2D3138;
    --darkBg-gray: #161C24;
    --darkBg-pop: ;
    --darkBd-color: #35393f;
    /* var: basic */
    --selT: currentColor;
    --selBg: #D2D3D7;
    --placeH: var(--coreT-dim);
    --btnT: #FFFDFC;
    --btnBg: #3740FF;
    --btnBd-line: 1px;
    --btnBd-color: var(--coreBd-color);
    --btnBd-rad: 2.5px;
    --btnW-max: 320px;
    --inpT: currentColor;
    --inpBg: var(--coreBg);
    --inpBd-line: 1px;
    --inpBd-color: var(--coreBd-color);
    --inpBd-rad: 2.5px;
    --icWidth: 35px;
    --icHeight: 35px;
    /* var: pop */
    --opW-max: 768px;
    --opH: 60px;
    /* var: head */
    --hedS: '';
    --hedH: 80px;
    --hedH-mob: 80px;
    --hed-font: 1.05rem;
    --hed-fontW: 600;
    --hedT: currentColor;
    --hedBg: var(--coreBg);
    --hed-logoW: 160px;
    --hed-logoH: 50px;
    /* var: main */
    --mainW-max: 1220px;
    --mainPage-max: 860px;
    --mainPadding: 22px;
    --mainSpace: 40px;
    --mainT-prim: currentColor;
    --mainT-dim: var(--coreT-dim);
    --mainBg: var(--coreBg);
    --mainBg-dim: var(--coreBg-dim);
    --mainBg-gray: var(--coreBg-gray);
    --mainBd-line: 1px;
    --mainBd-color: var(--coreBd-color);
    --mainBd-rad: 2.5px;
    /* var: foot */
    --fotT: currentColor;
    --fotBd-line: 1px;
    --fotBd-color: var(--coreBd-color);
    /* var: post */
    --posT-fontW: 700;
    --posT-fontMin: 2.125rem;
    --posT-fontMax: 2.625rem;
    --posTi-fontMin: 1.1rem;
    --posTi-fontMax: 1.1rem;
    --posB-fontMin: .93rem;
    --posB-fontMax: 1rem;
    /* var: thumbnail */
    --aspectRatio: 56.25%;
    /* According to aspect-ratio 16:9 (9 / 16 = 0.5625) */
    /* var: typo */
    --break: 3em;
    --img-rad: 2.5px;
    --lineHeight: 1.65;
    --lineSpacing: 1.8em;
    --tableBg: rgb(246 246 246 / 80%);
    --noteS: '\002A';
    --noteT: #272EB5;
    --noteBg: #E8F0FE;
    --warnS: '\0021';
    --warnT: #E51661;
    --warnBg: #FCE8E8;
    --stepT: var(--coreBg-gray);
    --stepH: transparent;
    /* var: syntax */
    --snOrange: #B75501;
    --snBlue: #015692;
    --snGreen: #54790D;
    --snRed: #F15A5A;
    --snGray: #656E77;
    --snGold: #72621D;
    --snPurple: #803378;
    --snT: #191919;
    --snBg: #F8F9FA;
    --snBd-line: 1px;
    --snBd-color: #323232;
    --snBd-rad: 2.5px;
    /* var: widget */
    --widget-font: .93rem;
    --widget-fontW: 400;
    /* var: transition */
    --tTime: .1s ease;
    --tShow: opacity var(--tTime), visibility var(--tTime);
    /* var: text */
    --free: 'Free!';
    --new: 'New!';
    --breadC: '\002F';
    --noImg: 'null';
    --label: 'and';
    --close: 'Close';
    --close-in: 'Tutup';
    --next: 'Next';
    --prev: 'Prev';
    --copy: 'or copy link';
    --copyC: 'Copy to clipboard';
    --copied: 'Copied!';
}

/* font: Noto Sans(latin) */
@font-face {
    font-family: 'Noto Sans';
    font-style: italic;
    font-weight: 400;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0OIpQlx3QUlC5A4PNr4ARCQ_k.woff2) format('woff2');
    unicode-range: var(--unicode)
}

@font-face {
    font-family: 'Noto Sans';
    font-style: normal;
    font-weight: 400;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0IIpQlx3QUlC5A4PNr5TRA.woff2) format('woff2');
    unicode-range: var(--unicode)
}

@font-face {
    font-family: 'Noto Sans';
    font-style: italic;
    font-weight: 500;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0TIpQlx3QUlC5A4PNr4AyxYOyDzW0.woff2) format('woff2');
    unicode-range: var(--unicode)
}

@font-face {
    font-family: 'Noto Sans';
    font-style: normal;
    font-weight: 500;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0NIpQlx3QUlC5A4PNjFhdVZNyB.woff2) format('woff2');
    unicode-range: var(--unicode)
}

@font-face {
    font-family: 'Noto Sans';
    font-style: italic;
    font-weight: 600;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0TIpQlx3QUlC5A4PNr4AydZ-yDzW0.woff2) format('woff2');
    unicode-range: var(--unicode)
}

@font-face {
    font-family: 'Noto Sans';
    font-style: normal;
    font-weight: 600;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0NIpQlx3QUlC5A4PNjOhBVZNyB.woff2) format('woff2');
    unicode-range: var(--unicode)
}

@font-face {
    font-family: 'Noto Sans';
    font-style: italic;
    font-weight: 700;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0TIpQlx3QUlC5A4PNr4Az5ZuyDzW0.woff2) format('woff2');
    unicode-range: var(--unicode)
}

@font-face {
    font-family: 'Noto Sans';
    font-style: normal;
    font-weight: 700;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0NIpQlx3QUlC5A4PNjXhFVZNyB.woff2) format('woff2');
    unicode-range: var(--unicode)
}

/* font: Titillium Web(latin) */
@font-face {
    font-family: 'Titillium Web';
    font-style: normal;
    font-weight: 400;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/titilliumweb/v15/NaPecZTIAOhVxoMyOr9n_E7fdMPmDQ.woff2) format('woff2');
    unicode-range: var(--unicode)
}

@font-face {
    font-family: 'Titillium Web';
    font-style: italic;
    font-weight: 400;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/titilliumweb/v15/NaPAcZTIAOhVxoMyOr9n_E7fdMbWD6xW.woff2) format('woff2');
    unicode-range: var(--unicode)
}

@font-face {
    font-family: 'Titillium Web';
    font-style: normal;
    font-weight: 600;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/titilliumweb/v15/NaPDcZTIAOhVxoMyOr9n_E7ffBzCGItzYw.woff2) format('woff2');
    unicode-range: var(--unicode)
}

@font-face {
    font-family: 'Titillium Web';
    font-style: italic;
    font-weight: 600;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/titilliumweb/v15/NaPFcZTIAOhVxoMyOr9n_E7fdMbe0IhDYZyc.woff2) format('woff2');
    unicode-range: var(--unicode)
}

@font-face {
    font-family: 'Titillium Web';
    font-style: normal;
    font-weight: 700;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/titilliumweb/v15/NaPDcZTIAOhVxoMyOr9n_E7ffHjDGItzYw.woff2) format('woff2');
    unicode-range: var(--unicode)
}

@font-face {
    font-family: 'Titillium Web';
    font-style: italic;
    font-weight: 700;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/titilliumweb/v15/NaPFcZTIAOhVxoMyOr9n_E7fdMbetIlDYZyc.woff2) format('woff2');
    unicode-range: var(--unicode)
}

/* font: Fira Mono(latin) */
@font-face {
    font-family: 'Fira Mono';
    font-style: normal;
    font-weight: 400;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/firamono/v14/N0bX2SlFPv1weGeLZDtgJv7S.woff2) format('woff2');
    unicode-range: var(--unicode)
}

/* basic: default.css */
::selection {
    color: var(--selT);
    background-color: var(--selBg)
}

::placeholder {
    color: var(--placeH);
    opacity: .6;
    transition: var(--tShow)
}

*,
::before,
::after {
    -webkit-box-sizing: border-box;
    box-sizing: border-box
}

html {
    scroll-behavior: smooth;
    overflow-x: hidden;
    font: var(--fontBase) var(--fontBody)
}

body {
    position: relative;
    margin: 0;
    padding: 0 !important;
    color: var(--coreT-prim);
    background-color: var(--coreBg);
    -webkit-font-smoothing: antialiased
}

h1,
h2,
h3,
h4,
h5,
h6 {
    margin-block: .67em;
    font: var(--h-fontW) 1.4rem/1.4 var(--fontHead);
    color: currentColor
}

h1 {
    font-size: var(--h1)
}

h2 {
    font-size: var(--h2)
}

h3 {
    font-size: var(--h3)
}

h4 {
    font-size: var(--h4)
}

h5 {
    font-size: var(--h5)
}

h6 {
    font-size: var(--h6)
}

a {
    color: var(--coreLink);
    text-decoration: none
}

a:hover {
    filter: brightness(.9)
}

table {
    border-spacing: 0
}

sub,
sup {
    font-size: 70%;
    line-height: 0;
    position: relative;
    vertical-align: baseline
}

sub {
    inset-block-end: -.25em
}

sup {
    inset-block-start: -.5em
}

abbr[title] {
    border-bottom: none;
    text-decoration: underline
}

iframe {
    width: 100%;
    border: 0;
    margin-inline: auto
}

figure {
    margin-inline: 0
}

img {
    display: inline-block;
    max-width: 100%;
    height: auto;
    border-style: none
}

svg {
    --svg: 24px;
    width: var(--svg);
    height: var(--svg);
    fill: currentColor
}

svg.line,
svg .line {
    fill: none;
    stroke: currentColor;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 1.25
}

/* basic: input */
button,
input,
optgroup,
select,
textarea,
fieldset,
legend {
    margin: 0;
    outline: 0;
    font-size: inherit;
    line-height: 1.4;
    font-family: inherit
}

button,
input {
    overflow: visible
}

button,
select {
    text-transform: none
}

textarea {
    overflow: auto
}

button,
[type=button],
[type=reset],
[type=submit] {
    -webkit-appearance: button
}

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
    border-style: none;
    padding: 0
}

button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
    outline: 1px dotted ButtonText
}

input,
textarea {
    color: var(--inpT);
    background-color: var(--inpBg)
}

[type=search] {
    -webkit-appearance: textfield;
    outline-offset: -2px
}

[type=search]::-ms-clear,
[type=search]::-ms-reveal {
    display: none;
    appearance: none;
    width: 0;
    height: 0
}

[type=search]::-webkit-search-decoration,
[type=search]::-webkit-search-cancel-button,
[type=search]::-webkit-search-results-button,
[type=search]::-webkit-search-results-decoration {
    display: none;
    -webkit-appearance: none;
    appearance: none
}

[type=checkbox],
[type=radio] {
    padding: 0
}

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
    height: auto
}

details summary.n,
details:is(.sp, .ac) summary {
    list-style: none;
    outline: none;
    cursor: default
}

details summary.n::-webkit-details-marker,
details:is(.sp, .ac) summary::-webkit-details-marker {
    display: none
}

/* basic: function */
.fc::after {
    content: '';
    position: fixed;
    inset: 0;
    z-index: 1;
    transition: background var(--tTime), var(--tShow), backdrop-filter var(--tTime);
    background-color: transparent;
    opacity: 0;
    visibility: hidden
}

:is(.free, .new)::after {
    display: inline-block;
    content: var(--free);
    color: var(--coreLink);
    font-weight: 400;
    font-size: small;
    text-indent: 5px
}

.new::after {
    content: var(--new)
}

.extL::after {
    content: '';
    display: inline-block;
    width: 14px;
    height: 14px;
    margin-inline-start: 6px;
    background: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23989b9f' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><line x1='7' y1='17' x2='17' y2='7'/><polyline points='7 7 17 7 17 17'/></svg>") center / 16px no-repeat
}

.noList,
.noList :is(ul, ol) {
    list-style: none;
    margin: 0;
    padding: 0
}

.noMargin {
    margin: 0
}

.noWrap {
    white-space: nowrap
}

.break {
    word-break: break-word
}

.ellips {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis
}

.cInherit a {
    color: inherit
}

.cInherit.u a:hover {
    text-decoration: underline
}

.noFilter a:hover {
    filter: none
}

.colorDim {
    color: var(--coreT-dim)
}

.colorLink {
    color: var(--coreLink)
}

.bgInherit {
    background-color: inherit
}

.bgDim {
    background-color: var(--mainBg-dim)
}

.bgGray {
    background-color: var(--mainBg-gray)
}

.clamp {
    /*display:-webkit-box;*/
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden
}

.strike {
    text-decoration: line-through
}

.flex {
    display: flex
}

.flex.center {
    align-items: center;
    justify-content: center
}

.flex.centerA {
    align-items: center
}

.flex.centerJ {
    justify-content: center
}

.flex.column {
    flex-direction: column
}

.flex.wrap {
    flex-wrap: wrap
}

.flex.space-between {
    justify-content: space-between
}

.flex.baseline {
    align-items: baseline
}

.flexIn {
    display: inline-flex
}

.flexIn.baseline {
    align-items: baseline
}

.flexIn.center {
    align-items: center
}

.shrink {
    flex-shrink: 0
}

.grow {
    flex-grow: 1
}

.opacity {
    opacity: .8
}

.hidden,
[hidden] {
    display: none
}

.invisible {
    opacity: 0;
    visibility: hidden
}

.block {
    display: block
}

.inline {
    display: inline
}

.relative {
    position: relative
}

.clear {
    width: 100%;
    display: block;
    margin: 0;
    padding: 0;
    float: none;
    clear: both
}

/* basic: button */
.button {
    display: inline-flex;
    align-items: center;
    column-gap: 10px;
    max-width: var(--btnW-max);
    padding-block: .65rem;
    padding-inline: 1rem;
    outline: 0;
    border: 0;
    border-radius: var(--btnBd-rad);
    color: var(--btnT);
    background-color: var(--btnBg);
    font: .937rem/1.5 var(--fontBody);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis
}

.button:hover {
    filter: brightness(1.1)
}

.button:active {
    filter: brightness(.9)
}

.button.ln {
    border: var(--btnBd-line) solid var(--btnBd-color);
    color: inherit;
    background-color: transparent;
    transition: border var(--tTime), box-shadow var(--tTime)
}

.button.ln:hover {
    border-color: var(--btnBg);
    box-shadow: 0 0 0 .5px var(--btnBg) inset
}

.button.sc {
    padding-inline: 0;
    color: currentColor;
    background-color: transparent
}

.button.sc:hover {
    text-decoration: underline
}

.button.sh {
    padding-inline: 1.3rem;
    border: var(--btnBd-line) solid var(--btnBd-color);
    color: inherit;
    background-color: transparent;
    transition: transform var(--tTime), box-shadow var(--tTime)
}

.button.sh:hover {
    transform: translate(-4px, -4px);
    box-shadow: 4px 4px var(--btnBd-color);
    filter: none
}

.button.round {
    border-radius: 30px
}

.button svg {
    --svg: 20px;
    flex-shrink: 0;
    stroke-width: 1.5
}

.button span[data-text]::after {
    content: attr(data-text);
    display: inline-block;
    font-size: smaller;
    text-indent: 4px;
    opacity: .8
}

.btnF {
    display: flex;
    justify-content: center;
    gap: 12px;
    margin-block: 1em
}

/* basic: icons */
.ic {
    display: inline-flex;
    flex-shrink: 0;
    align-items: center;
    justify-content: center;
    min-width: var(--icWidth);
    height: var(--icHeight)
}

:is(.i12, .i14, .i16, .i18, .i20, .i22, .i28) svg {
    flex-shrink: 0
}

.i12 svg {
    --svg: 12px
}

.i14 svg {
    --svg: 14px
}

.i16 svg {
    --svg: 16px
}

.i18 svg {
    --svg: 18px
}

.i20 svg {
    --svg: 20px
}

.i22 svg {
    --svg: 22px
}

.i28 svg {
    --svg: 28px
}

.op svg {
    opacity: .8
}

/* basic: user-pic */
.avatar {
    --ci: 28px;
    width: var(--ci);
    height: var(--ci);
    border-radius: 50%;
    background-color: var(--mainBg-gray);
    background-size: 100%;
    background-position: center;
    background-repeat: no-repeat
}

.avatar.im {
    --ci: 35px
}

/* basic: font */
.fontA {
    font-size: var(--fontA)
}

.fontD {
    font-size: var(--fontD)
}

.fontDM {
    font-size: clamp(.813rem, .758rem + .208vw, .875rem)
}

.fontM {
    font-size: var(--fontM)
}

.fontMM {
    font-size: var(--fontMM)
}

.fontS {
    font-size: small
}

.fontSm {
    font-size: smaller
}

.fontH {
    font-family: var(--fontHead)
}

.fontB {
    font-family: var(--fontBody)
}

.fontC {
    font-family: var(--fontCode)
}

.fontW-400 {
    font-weight: 400
}

.fontW-500 {
    font-weight: 500
}

.fontW-600 {
    font-weight: 600
}

.fontW-700 {
    font-weight: 700
}

/* elem: error */
.erP {
    height: 100dvh;
    text-align: center
}

.erPC {
    width: min(calc(100% - (var(--mainPadding) * 2.5)), 450px)
}

.erP .e {
    color: rgb(0 0 0 / 10%);
    font-size: clamp(3.2rem, 2.935rem + 1.008vw, 3.5rem)
}

.erP .t {
    font-weight: 600;
    font-size: clamp(1.312rem, 1.234rem + .296vw, 1.4rem)
}

.erP p {
    margin-block: 20px 30px;
    line-height: 1.5
}

/* elem: noscript */
.noJS :is(.noscript, .lazyYt) {
    display: none
}

.noT {
    position: fixed;
    inset-inline-start: var(--mainPadding);
    inset-block-end: var(--mainPadding);
    max-width: 400px;
    padding-block: 20px;
    padding-inline: 20px;
    border-radius: var(--mainBd-rad);
    color: #d9e2f0;
    background: #323232;
    font-size: var(--fontM);
    line-height: 1.4;
    font-family: var(--fontBody);
    box-shadow: 0 15px 30px -8px rgb(0 0 0 / 8%);
    z-index: 20
}

.noT.nJ {
    --p: 50px;
    padding-block-end: var(--p)
}

.noT.nJ:not([open]),
.noT.nJ:not(:target) {
    display: none
}

.noT.nJ summary {
    display: flex;
    align-items: center;
    position: absolute;
    inset-block-end: 0;
    inset-inline-end: 0;
    height: var(--p);
    padding-inline: 20px
}

.noT.nJ .c {
    font-weight: 600
}

.noT.nJ span::before {
    content: attr(data-text)
}

.noT.cP {
    --h: var(--opH);
    inset-block-end: -100%;
    display: inline-flex;
    align-items: center;
    padding-block: 15px;
    transition: inset var(--tTime), var(--tShow);
    animation: noT 2.2s ease-in forwards
        /*direction:rtl*/
}

.noT.cP::before {
    content: var(--copied)
}

@media screen and (max-width:500px) {
    .noT {
        inset-block-end: 0;
        inset-inline: 0;
        width: 100%;
        max-width: 100%;
        border-radius: 0
    }

    .noT.cP {
        min-height: var(--h);
        margin-block-end: calc(var(--mainPadding) * -1)
    }
}

/* elem: pop-up */
.oP {
    align-items: center;
    position: fixed;
    inset-block-end: 0;
    inset-inline: 0;
    height: 100dvh;
    margin-block-end: -100%;
    font-size: var(--fontA);
    line-height: 1.7;
    transition: margin var(--tTime), var(--tShow);
    z-index: 10
}

.oP .oPA {
    width: min(100%, var(--opW-max));
    max-height: 90%;
    overflow: hidden;
    z-index: 2
}

.oP .oPB {
    padding-block: calc(var(--opH) + 2px) var(--mainPadding);
    width: 100%;
    padding-inline: var(--mainPadding);
    border: 1px solid var(--mainBd-color);
    border-radius: var(--mainBd-rad);
    background: var(--mainBg);
    overflow-x: hidden;
    overflow-y: scroll
}

.oP .oPH {
    position: absolute;
    inset-block-start: 1px;
    inset-inline: 1px;
    height: var(--opH);
    padding-block: 0;
    padding-inline: inherit;
    border-start-start-radius: var(--mainBd-rad);
    border-start-end-radius: var(--mainBd-rad);
    z-index: 5
}

.oP .oPH .t {
    display: block
}

.oPH {
    gap: 10px;
    padding-block: 20px
}

.oPH .t {
    display: none;
    margin-inline-end: auto
}

.oPH .t::before {
    content: attr(data-text)
}

.oPH .c {
    gap: 8px;
    min-width: var(--icWidth);
    height: var(--icHeight);
    cursor: pointer
}

.oPH .c:not(:where(.oP *)) {
    display: none
}

.oPH .c::before {
    content: var(--close);
    color: var(--coreT-dim)
}

.oPH .c::after {
    content: '\2715';
    font-size: var(--fontA)
}

.oPI:checked~.oP {
    opacity: 1;
    visibility: visible;
    margin-block-end: 0
}

.oPI:checked~.oP>.fc::after {
    opacity: 1;
    visibility: visible;
    background-color: var(--coreBg-pop);
    backdrop-filter: saturate(180%) blur(10px)
}

/* elem: main */
.max {
    max-width: var(--mainW-max);
    margin-inline: auto;
    padding-left: var(--mainPadding);
    padding-right: var(--mainPadding)
}

.maW {
    --maxW: 1024px;
    min-height: 100dvh
}

.maW.it {
    --maxW: var(--mainPage-max);
}

/* maH */
.maH {
    height: var(--hedH);
    color: var(--hedT);
    background-color: var(--hedBg);
    z-index: 2
}

.maH.sticky::after {
    content: '';
    position: absolute;
    inset-inline: 0;
    inset-block-end: 0;
    border-block-end: 0px solid var(--mainBd-color)
}

.maH .max {
    --hdLogo: 200px;
    --g: 35px;
    gap: 4rem;
    height: 100%
}

.maHT {
    max-width: var(--hdLogo)
}

.maHR {
    width: calc(100% - var(--hdLogo))
}

.maHR>*:first-child {
    margin-inline-start: auto
}

/*_nav*/
.maHM {
    gap: var(--g)
}

.maHM li>* {
    padding-block: 12px
}

.maHM .a::after {
    content: '';
    position: absolute;
    inset-inline-start: 1px;
    inset-block-end: 0;
    width: 0;
    height: 2px;
    border-radius: 2px;
    background-color: currentColor;
    transition: width var(--tTime), var(--tShow);
    opacity: 0;
    visibility: hidden
}

.maHM .a:hover::after {
    width: 20px;
    opacity: .8;
    visibility: visible
}

/*_icon*/
.maHI {
    gap: 8px;
    margin-inline: var(--g) -9px
}

.maHI .button {
    padding-block: 8px;
    padding-inline: 20px
}

/* maL */
.maL {
    padding-block: 5rem
}

.maL.i {
    padding-block: 3rem 0
}

/*_landing*/
.maLT {
    width: min(90%, var(--maxW));
    margin-inline: auto
}

.maLT .t {
    margin-block: 0 1.5rem;
    font-weight: 400;
    font-size: clamp(2.125rem, 1.684rem + 1.681vw, 2.625rem);
    line-height: 1.25;
    z-index: 1
}

:is(.maLT .t, .pt .name.i) .i::after {
    content: '';
    position: absolute;
    inset-block-end: 0;
    inset-inline-end: -25px;
    width: clamp(4.875rem, 4.324rem + 2.101vw, 5.5rem);
    height: 28px;
    background-color: var(--bs);
    z-index: -1
}

.maLT .d {
    max-width: 90%;
    color: var(--coreT-dim);
    font-size: clamp(.919rem, .842rem + .292vw, 1.006rem);
    line-height: 1.6
}

.maLT>* {
    width: 50%
}

.maLT .im {
    gap: 15px;
    align-self: flex-start
}

.maLT .ac {
    gap: 10px;
    margin-block-start: 40px
}

.maLT .ac .l {
    --b: #8775f5;
    gap: 20px
}

.maLT .ac .m>*:not(:last-child)::after {
    content: '\00B7';
    margin-inline: 10px
}

.maLT .at {
    margin-block-start: calc(40px + 2em)
}

.maLT .at::before {
    content: '';
    display: block;
    width: 50px;
    border-block-start: 2px solid currentColor;
    opacity: .8
}

.maLT .at::after {
    content: '\201C';
    position: absolute;
    inset-block-start: 0;
    font: 6.25rem/1.35 var(--fontCode);
    text-indent: -1.5rem;
    opacity: .075
}

.maLT .at p {
    margin-block: 2em;
    line-height: 1.6
}

.maLT .at p::before,
.maLT .at p::after {
    content: '\0022'
}

.maLT .at .w {
    gap: 10px
}

.maLT .at .n {
    width: calc(100% - (28px + 10px))
}

.maLT .at .avatar {
    border: 1px solid var(--mainBd-color);
    box-shadow: 3px 3px var(--b)
}

.maLT .at bdi {
    line-height: 1.2
}

@media screen and (max-width:640px) {
    .maLT>* {
        width: 100%
    }
}

/* maS */
.maS svg {
    width: 100%;
    height: 30px;
    color: var(--coreBg);
    transform: rotateY(180deg)
}

/* maN/maM */
.maN,
.maM {
    padding-block: 3rem 5rem
}

.maM .tt {
    margin-block-end: 20px
}

.maM .tt h2::after {
    content: ' \2014'
}

/* maF */
.maF {
    padding-block: 2.5rem 2rem;
    border-block-start: var(--fotBd-line) solid var(--fotBd-color);
    color: var(--fotT)
}

.maF .max {
    column-gap: 4rem
}

/*credit*/
.maFC {
    align-self: center;
    font-size: .78rem;
    line-height: 1.3
}

/*_menu*/
.maFM {
    gap: 2rem 4rem
}

.maFM nav[dat-text]::before {
    content: attr(data-text);
    display: block;
    margin-block-end: 10px;
    /*color:var(--coreT-prim);*/
    font-weight: 700;
    font-family: var(--fontHead)
}

.maFM li {
    flex-shrink: 0
}

.maFM li:not(:last-child)::after {
    content: '\00b7';
    margin-inline: 14px;
    opacity: .8
}

.maFM a:hover {
    color: var(--coreT-prim)
}

/* type: Common */
.no-items {
    display: none
}

/* type: Header */
.Header {
    width: 100%;
    background-repeat: no-repeat;
    background-size: 100%;
    background-position: center
}

.Header img {
    max-width: var(--hed-logoW);
    max-height: var(--hed-logoH)
}

.heN {
    font-weight: var(--hed-fontW);
    font-size: var(--hed-font)
}

.heT {
    gap: 6px;
    min-width: 48px
}

.heT .JD {
    display: block;
    width: 30px;
    height: clamp(1.625rem, 1.404rem + .84vw, 1.875rem);
    margin-inline-start: -2px
}

/*.heT::after{content:var(--hedS); color:var(--coreT-dim);font:400 12px/14px var(--fontBody)}*/
/* type: Blog */
.maB {
    margin-inline: auto
}

.maB:not(.i) {
    width: min(90%, var(--maxW))
}

.maB.i {
    width: min(90%, var(--mainPage-max))
}

/*_breadcrumbs*/
.boT {
    margin-block-end: 20px
}

.boT.i {
    margin-block-end: 1rem
}

.boT .t {
    line-height: 1.4;
    overflow: hidden
}

.boT .t .a:not(.ah)::before {
    content: attr(data-text)
}

.boT .t .n:not(.nm) {
    padding-inline-start: 8px
}

.boT .t .n:not(.nl)::after {
    content: attr(data-text);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis
}

.boT .t .nm::before {
    content: var(--breadC);
    flex-shrink: 0;
    color: var(--coreT-dim);
    margin-inline: 8px;
    font-weight: 400
}

/*_nav*/
.boN {
    gap: 10px;
    justify-content: flex-end;
    margin-block-start: 3.5rem
}

.boN .p {
    margin-inline: -2px auto
}

.boN .p::after {
    content: var(--prev)
}

.boN .n::before {
    content: var(--next)
}

/*_article*/
.boC.f {
    --g: 14px;
    gap: var(--g)
}

.boC.f>*,
:where(.Image, .Text) .dp {
    --p: 22px;
    width: calc((100% / 3) - (var(--g) * 2/3));
    padding: var(--p);
    border: 1px solid var(--mainBd-color);
    border-radius: var(--mainBd-rad);
    background-color: var(--mainBg);
    transition: box-shadow var(--tTime), transform var(--tTime)
}

.boC.f>article.p:hover,
:where(.Image, .Text) .dp:hover {
    box-shadow: 4px 4px var(--mainBd-color);
    transform: translate(-4px, -4px)
}

/*_head(label)*/
.ph {
    gap: 8px;
    margin-block-end: 20px;
    line-height: 1.2
}

:is(.tag .v) {
    margin-inline-end: 3px;
    vertical-align: middle
}

.tag .i[data-text]::before {
    content: attr(data-text);
    color: var(--coreT-dim)
}

.tag .a::before {
    content: attr(data-text)
}

/*_thumb*/
.pg {
    margin-block-end: 20px
}

.pg .im,
.dg .i {
    --w: calc(100% + var(--p));
    width: var(--w);
    margin-inline: calc(var(--p) / -2);
    padding-block-start: var(--w);
    background-color: var(--coreBg-dim);
    line-height: 1.2;
    text-align: center;
    overflow: hidden
}

.pg .im.null::before {
    content: var(--noImg);
    position: absolute;
    inset-block-start: 50%;
    inset-inline-start: 50%;
    transform: translate(-50%, -50%)
}
.slgs{
    font-size: calc(var(--h1) + 3px);
    font-family: var(--font);
    font-weight: bold;
}
.slgs span{
    color: var(--btnBg);
}
.hdsr{
    padding: 0 10px;
}
.pg .im span,
.dg .i span {
    position: absolute;
    inset: 0;
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat
}

/*_title*/
.pt .name:not(.i),
.dt .t {
    font-size: var(--posTi-fontMax);
    line-height: 1.3
}

.pt .name.i {
    font-weight: var(--posT-fontW);
    font-size: var(--posT-fontMax);
    line-height: 1.25;
    z-index: 1
}

/*_snippet/desc*/
.ps .snippet {
    margin-block-start: 10px;
    line-height: 1.4
}

.ps:not(.all) .snippet {
    display: -webkit-box;
    -webkit-line-clamp: 2
}

.pd {
    color: var(--coreT-dim);
    font-size: clamp(.919rem, .842rem + .292vw, 1.006rem);
    line-height: 1.6
}

/*_body*/
.pe {
    margin-block-start: 3rem;
    font-size: var(--posB-fontMax);
    line-height: var(--lineHeight);
    transition: font var(--tTime)
}

/* type: Image/Text */
:where(.Image, .Text) .dp {
    gap: var(--p);
    width: 100%
}

:where(.Image, .Text) .dh {
    line-height: 1.2
}

.Text .dg .i {
    border: 1px dashed currentColor
}

.Text .dg .i::before {
    content: attr(data-text);
    position: absolute;
    inset-block-start: 50%;
    inset-inline-start: 50%;
    transform: translate(-50%, -50%)
}

/* type: component */
.pe :is(h1, h2, h3, h4, h5, h6) {
    margin-block-start: 1em;
    padding-block-start: 0;
    font-weight: 700;
    line-height: 1.3;
    transition: margin var(--tTime), padding var(--tTime)
}

.pe :is(h1, h2, h3, h4, h5, h6):target {
    margin-block-start: 0;
    padding-block-start: calc(var(--hedH) / 2)
}

.pe :is(h1, h2, h3, h4, h5, h6).h::before {
    content: attr(data-text)
}

/*_img*/
.pe img {
    display: inline-block;
    border-radius: var(--img-rad)
}

.tr-caption,
figcaption {
    display: block;
    margin-block-start: 5px;
    padding-inline: 10px;
    color: var(--coreT-dim);
    font-size: small;
    line-height: 1.4
}

.psImg {
    --g: 15px;
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    justify-content: center;
    gap: var(--g)
}

.psImg img {
    display: block
}

.psImg>* {
    width: calc((100% / 2) - (var(--g) / 2));
    position: relative
}

.scImg>* {
    width: calc((100% / 3) - (var(--g) * 2/3))
}

.btImg [for] {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    inset: 0;
    border-radius: var(--img-rad);
    background-color: var(--coreBg-pop);
    font-size: small;
    transition: var(--tShow);
    backdrop-filter: saturate(180%) blur(10px)
}

.hdImg .shImg {
    width: 100%;
    margin-block: 0
}

.inImg:not(:checked)~.hdImg .shImg {
    display: none
}

.inImg:checked~.hdImg .btImg [for] {
    opacity: 0;
    visibility: hidden
}

.imBox {
    position: relative
}

.imBox img {
    display: block;
    transition: position var(--tTime), margin var(--tTime)
}

.imBox details .n,
.imBox>[open] {
    position: absolute;
    inset: 0;
    transition: position var(--tTime), height var(--tTime), background var(--tTime), backdrop-filter var(--tTime)
}

.imBox details .n .c {
    --p: calc(var(--mainPadding) * -1);
    --w: 35px;
    position: fixed;
    bottom: var(--p);
    right: var(--p);
    width: var(--w);
    height: var(--w);
    border: 1px solid var(--mainBd-color);
    border-radius: 50%;
    background-color: var(--mainBg);
    opacity: 0;
    visibility: hidden;
    transition: bottom var(--tTime), right var(--tTime), var(--tShow)
}

.imBox details .n .c::after {
    content: '\2715';
    font-weight: 600;
    font-size: var(--fontM);
    line-height: normal
}

.imBox>[open] {
    position: fixed;
    height: 100dvh;
    background-color: var(--coreBg-pop);
    backdrop-filter: saturate(180%) blur(10px);
    z-index: 10
}

.imBox>[open] .n .c {
    --p: var(--mainPadding);
    opacity: 1;
    visibility: visible
}

.imBox>[open]~ :where(img, noscript) {
    --m: calc(100% - (var(--mainPadding) * 2));
    position: fixed;
    z-index: 10
}

.imBox>[open]~img {
    inset: 0;
    max-width: var(--m);
    max-height: var(--m);
    margin: auto;
    box-shadow: 0 5px 20px -5px rgb(0 0 0 / 20%)
}

.imBox>[open]~noscript {
    inset-block-start: 50%;
    inset-inline-start: 50%;
    transform: translate(-50%, -50%)
}

.imBox>[open]~noscript img {
    box-shadow: 0 5px 20px -5px rgb(0 0 0 / 20%)
}

/*_parg*/
.pe p,
.psImg {
    margin-block: var(--lineSpacing)
}

.pe hr {
    margin-block: var(--break);
    border: 0;
    font: 24px var(--fontCode)
}

.pe hr::before {
    content: '\007E';
    display: block;
    color: var(--coreT-dim);
    letter-spacing: .5em;
    text-indent: .5em;
    text-align: center;
    clear: both
}

.pe hr.dot::before {
    content: '\2027 \2027 \2027'
}

.pe hr.line::before {
    content: '';
    border-block-end: 1.5px solid var(--coreBg-gray)
}

.pe:not(.r) .dropCap {
    float: left;
    margin-block-start: 1px;
    margin-inline-end: 6px;
    font: 500 3.4em/45px var(--fontBody)
}

.pIndent {
    text-indent: 2.2em
}

.pRef {
    color: var(--coreT-dim);
    font-size: var(--fontM);
    line-height: 1.4;
    word-break: break-word
}

.pRef :is(ol, ul) {
    padding-inline-start: 25px
}

blockquote {
    position: relative;
    margin-inline: 0;
    padding-block: 12px;
    padding-inline-start: 2em;
    border-inline-start: 2px solid var(--coreBg-gray);
    color: var(--coreT-dim);
    font-size: var(--fontA);
    line-height: 1.6
}

blockquote.s-1 {
    padding-block: 1.7em;
    padding-inline-start: 40px;
    border-block: 1px solid var(--coreBg-gray);
    border-inline-start: 0
}

blockquote.s-1::before {
    content: '\201D';
    position: absolute;
    inset-block-start: 5px;
    inset-inline-start: 4px;
    font-size: 60px;
    line-height: normal;
    opacity: .2
}

.note {
    --f: 13.5px;
    --l: 1.5;
    position: relative;
    padding-block: 18px;
    padding-inline: 40px 20px;
    border-radius: 4px;
    color: var(--noteT);
    background-color: var(--noteBg);
    font-size: var(--f);
    line-height: var(--l);
    overflow: hidden
}

.note::before {
    content: var(--noteS);
    position: absolute;
    inset-block-start: 12px;
    inset-inline-start: 14px;
    min-width: 15px;
    text-align: center;
    font-size: 1.5em
}

.note.wr {
    color: var(--warnT);
    background-color: var(--warnBg)
}

.note.wr::before {
    content: var(--warnS)
}

/*_list*/
.step {
    --w: 30px;
    counter-reset: n;
    line-height: 1.6
}

.step>li {
    counter-increment: n;
    position: relative;
    padding-inline-start: 45px
}

.step>li:not(:last-child) {
    padding-block-end: 18px
}

.step>li::before {
    content: counter(n) '.';
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0;
    width: var(--w);
    height: var(--w);
    border: 1px solid var(--stepT);
    border-radius: 50%;
    font-weight: 500;
    font-size: smaller;
    transition: border var(--tTime), color var(--tTime), background var(--tTime)
}

.step>li::after {
    content: '';
    position: absolute;
    inset-block: calc(var(--w) + 8px) 8px;
    inset-inline-start: calc((var(--w) /2));
    border-inline-start: 1px solid var(--stepT)
}

.step>li:hover::before {
    border-color: currentColor;
    color: currentColor
}

.step img {
    margin-top: 1.2em
}

.pros,
.cons {
    --p: 10px;
    margin-block: 5px 1rem;
    padding-inline-start: var(--p);
    line-height: 1.5
}

:is(.pros, .cons) li {
    padding-inline-start: var(--p)
}

:is(.pros, .cons) li:not(:last-child) {
    margin-block-end: var(--p)
}

:is(.pros, .cons) li::marker {
    color: var(--coreT-dim)
}

.pros li::marker {
    content: '\002B'
}

.cons li::marker {
    content: '\2212'
}

/*_tabl*/
table {
    font-size: var(--fontD);
    line-height: 1.4
}

table:not(.tr-caption-container) {
    border: 1px solid var(--mainBd-color);
    border-radius: var(--mainBd-rad);
    overflow: hidden
}

table:not(.tr-caption-container) td,
table th {
    padding: 14px;
    border-width: 0;
    border-style: solid;
    border-color: var(--mainBd-color)
}

table:not(.tr-caption-container) tr:not(:last-child) td,
table th {
    border-block-end-width: 1px
}

table th {
    font-weight: 500;
    text-align: start
}

table th:not(:last-child),
table:not(.tr-caption-container) td:not(:last-child) {
    border-inline-end-width: 1px
}

.table {
    margin-block: 1em;
    padding-block-end: 4px;
    overflow-y: hidden;
    overflow-x: auto;
    scroll-behavior: smooth
}

.table.w90 table:not(.tr-caption-container) {
    min-width: 90%
}

.table.w100 table:not(.tr-caption-container) {
    min-width: 100%
}

.table.noLine table:not(.tr-caption-container) td:not(:last-child),
.table.noLine table th:not(:last-child) {
    border-inline-end-color: transparent
}

.table.withBg table:not(.tr-caption-container) tbody tr:nth-child(2n+1),
.table.hoverBg table:not(.tr-caption-container) tbody tr:hover,
.table.hoverTd td:hover {
    background-color: var(--tableBg)
}

/*_tab*/
.tbHd.stick:not(.preH) {
    position: sticky;
    inset-block-start: 0;
    background-color: var(--mainBg);
    z-index: 2
}

.tbHd {
    display: flex;
    position: relative;
    margin-block-end: 1.8em;
    border-block-end: 1px solid var(--mainBg-gray);
    font-weight: 500;
    font-size: var(--fontD);
    line-height: normal;
    overflow-x: scroll;
    overflow-y: hidden;
    scroll-behavior: smooth;
    scroll-snap-type: x mandatory;
    -ms-overflow-style: none
}

.tbHd>* {
    position: relative;
    padding: 1rem;
    color: var(--coreT-dim);
    white-space: nowrap;
    scroll-snap-align: start;
    transition: color var(--tTime)
}

.tbHd>*::before {
    content: attr(data-text)
}

.tbHd>*::after {
    content: '';
    position: absolute;
    inset-inline: 0;
    inset-block-end: 0;
    height: 2px;
    border-start-start-radius: 2px;
    border-start-end-radius: 2px;
    background-color: var(--coreLink);
    opacity: 0;
    transition: var(--tShow);
    z-index: 1
}

.pe :is(input[id*="1"]:checked ~ .tbHd [for*="1"], input[id*="2"]:checked ~ .tbHd [for*="2"], input[id*="3"]:checked ~ .tbHd [for*="3"], input[id*="4"]:checked ~ .tbHd [for*="4"], input[id*="5"]:checked ~ .tbHd [for*="5"]) {
    color: var(--coreLink)
}

.pe :is(input[id*="1"]:checked ~ .tbHd [for*="1"], input[id*="2"]:checked ~ .tbHd [for*="2"], input[id*="3"]:checked ~ .tbHd [for*="3"], input[id*="4"]:checked ~ .tbHd [for*="4"], input[id*="5"]:checked ~ .tbHd [for*="5"])::after {
    opacity: 1
}

.pe :is(input[id*="1"]:not(:checked) ~ .tbCn >[class*="1"], input[id*="2"]:not(:checked) ~ .tbCn >[class*="2"], input[id*="3"]:not(:checked) ~ .tbCn >[class*="3"], input[id*="4"]:not(:checked) ~ .tbCn >[class*="4"], input[id*="5"]:not(:checked) ~ .tbCn >[class*="5"]) {
    display: none
}

/*_tog*/
details.sp {
    padding: 1.25em;
    border-block: 1px solid var(--mainBg-gray);
    font-size: .968em;
    line-height: 1.4
}

details:is(.sp, .ac) summary {
    display: flex;
    align-items: baseline;
    gap: 10px
}

details:is(.sp, .ac) summary::after {
    content: '\002B';
    flex-shrink: 0;
    margin-inline-start: auto;
    font-size: 120%
}

details.sp[open] {
    border-color: var(--mainBd-color)
}

details:is(.sp, .ac)[open] summary::after {
    content: '\2212'
}

details.toc .toC {
    margin-block-start: 1.5em
}

details.toc a:hover {
    text-decoration: underline
}

details.toc a {
    display: inline;
    color: inherit
}

details.toc ol {
    list-style: none;
    margin: 0;
    padding: 0;
    line-height: 1.5;
    overflow: hidden
}

details.toc ol ol {
    margin-block-start: 5px;
    padding-block-start: 5px
}

details.toc ol ol ol ol {
    display: none
}

details.toc li {
    position: relative;
    padding-inline-start: 24px
}

details.toc li:not(:last-child) {
    padding-block-end: 10px
}

details.toc li::before {
    content: '\2014';
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0;
    min-width: 24px
}

details.toc li li::before {
    content: '';
    inset-block-start: -288px;
    inset-inline-start: 3px;
    min-width: 12px;
    height: 300px;
    border: 1.5px solid var(--coreBg-gray);
    border-block-start: 0;
    border-inline-end: 0;
    border-end-start-radius: 8px
}

.showH {
    margin-block: 1.8em;
    font-size: .968em;
    line-height: 1.6
}

details.ac {
    padding: 1.25em;
    border-block-end: 1px solid var(--mainBg-gray)
}

details.ac:first-child {
    border-block-start: 1px solid var(--mainBg-gray)
}

details.ac[open] summary {
    font-weight: 500
}

details.ac .aC {
    margin-block: 1em
}

/*_link*/
.pRelate {
    margin-block: 2.5em;
    padding: 1.25em;
    border-block: 1px solid var(--mainBg-gray);
    font-size: var(--fontD);
    line-height: 1.4
}

.pRelate b {
    color: var(--coreT-dim);
    font-weight: 400;
    font-size: var(--fontM)
}

.pRelate :is(ul, ol) {
    margin-block: 10px 0;
    padding-inline-start: 10px
}

.pRelate li {
    padding-inline-start: 10px
}

.pRelate li:not(:last-child) {
    margin-block-end: 5px
}

.pRelate li::marker {
    content: '\2012';
    color: var(--coreT-dim)
}

.pRelate a:hover {
    text-decoration: underline
}

/*_btn*/
.pe .button {
    margin-block: .375rem
}

:is(.btnF, .dlBox) .button {
    margin-block: 0
}

.dlBox {
    display: flex;
    flex-direction: column;
    gap: 20px;
    width: min(100%, 400px);
    margin-block: 1.8em;
    padding: 18px;
    border: 1px solid var(--mainBd-color);
    border-radius: var(--mainBd-rad);
    font-size: 14px;
    line-height: 1.4;
    transition: box-shadow var(--tTime)
}

.dlBox:hover {
    box-shadow: 0 15px 50px -20px rgb(0 0 0 / 20%)
}

.dlBox .f {
    display: flex;
    align-items: center;
    gap: 5px;
    color: var(--coreT-dim);
    font-weight: 500;
    font-size: var(--fontMM)
}

.dlBox .f svg {
    --svg: 18px
}

.dlBox .f[data-text]::after {
    content: attr(data-text)
}

.dlBox .f .i {
    --w: 28px;
    display: block;
    width: var(--w);
    height: var(--w);
    border-radius: 50%;
    background-color: var(--mainBg-gray);
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat
}

.dlBox .d {
    display: flex;
    align-items: center;
    gap: 10px
}

.dlBox .m {
    flex-grow: 1;
    font-weight: 500;
    word-break: break-word
}

.dlBox .m::after {
    content: attr(data-text);
    display: block;
    margin-block-start: 2px;
    color: var(--coreT-dim);
    font-weight: 400;
    font-size: var(--fontMM)
}

.dlBox .button {
    flex-shrink: 0;
    padding: 11px;
    font-size: inherit
}

.dlBox .button[href]::after {
    content: attr(aria-label);
    font-size: var(--fontM)
}

.dlBox .l {
    display: flex;
    align-items: stretch;
    position: relative
}

.dlBox .l .button[href] {
    border-start-end-radius: 0;
    border-end-end-radius: 0
}

.dlBox .l .button:not([href]) {
    border-start-start-radius: 0;
    border-end-start-radius: 0
}

.dlBox .l .button:not([href]):is(:active, :hover) {
    filter: none
}

.dlBox .b {
    position: absolute;
    inset-inline-end: 0;
    min-width: 140px;
    border: 1px solid var(--mainBd-color);
    border-radius: 2px;
    background-color: var(--mainBg);
    font-size: var(--fontMM);
    white-space: nowrap;
    z-index: 2
}

.dlBox .b a {
    display: block;
    padding: 12px
}

.dlBox .b a:not(:last-child) {
    border-block-end: 1px solid var(--mainBd-color)
}

.dlBox .b a:not:hover {
    color: var(--coreT-dim)
}

.dlBox summary.n {
    display: flex;
    position: relative
}

.dlBox summary.n::before {
    content: '';
    position: absolute;
    inset-block: 10px;
    inset-inline-start: 0;
    border-inline-start: 1px solid #FFFDFC
}

.dlBox [open] summary.n::after {
    opacity: 1;
    visibility: visible;
    z-index: 2
}

/*_code*/
.pre {
    border: var(--snBd-line) solid var(--snBd-color);
    border-radius: var(--snBd-rad);
    color: var(--snT);
    background-color: var(--snBg);
    direction: ltr
}

.pre:not(.tb) {
    position: relative;
    margin-block: 1.8em;
    margin-inline: auto;
    font-family: var(--fontCode);
    overflow: hidden
}

.pre:not(.tb)::after {
    --c: '</>';
    content: var(--c);
    display: flex;
    justify-content: flex-end;
    position: absolute;
    inset-block-start: 0;
    inset-inline: 0;
    padding-inline: 10px;
    color: var(--snGray);
    background-color: inherit;
    font-size: 11px;
    line-height: 30px
}

.pre:not(.tb).html::after {
    --c: '.html'
}

.pre:not(.tb).css::after {
    --c: '.css'
}

.pre:not(.tb).js::after {
    --c: '.js'
}

.pre:not(.tb).custom::after {
    content: attr(data-text)
}

.pre:not(.tb):hover button {
    z-index: 2
}

.pre:not(.tb) button {
    display: flex;
    justify-content: flex-end;
    position: absolute;
    inset-block-start: 0;
    inset-inline: 0;
    padding-block: 0;
    padding-inline: 10px;
    border: 0;
    color: var(--snGray);
    background-color: inherit;
    font-size: 11px;
    line-height: 30px;
    z-index: 1
}

.pre:not(.tb) button .cp::before {
    content: var(--copyC)
}

.pre:not(.tb):not(:hover) button {
    opacity: 0;
    visibility: hidden;
    transition-delay: 2s
}

.pre.tb .preH {
    margin: 0;
    font-size: var(--fontMM)
}

.pre.tb .preH::after {
    content: '</>';
    margin-inline-start: auto;
    padding: 1rem;
    color: var(--snGray);
    font: 10px var(--fontCode)
}

.pre.tb :is(input[id*="1"]:not(:checked) ~ [class*="1"], input[id*="2"]:not(:checked) ~ [class*="2"], input[id*="3"]:not(:checked) ~ [class*="3"], input[id*="4"]:not(:checked) ~ [class*="4"]) {
    display: none
}

:is(.pre, .pre.tb) pre {
    margin: 0;
    padding-block-start: 30px;
    color: inherit;
    background-color: inherit
}

pre {
    display: block;
    position: relative;
    font: 13px/1.6 var(--fontCode);
    color: var(--snT);
    background-color: var(--snBg);
    margin-block: 1.8em;
    margin-inline: auto;
    padding: 20px;
    border-radius: var(--mainBd-rad);
    -moz-tab-size: 2;
    tab-size: 2;
    -moz-hyphens: none;
    -ms-hyphens: none;
    hyphens: none;
    overflow: auto;
    direction: ltr;
    white-space: pre
}

pre i {
    color: var(--snBlue);
    font-style: normal
}

pre i.block {
    display: inline;
    color: #fff;
    background-color: var(--snBlue)
}

code,
kbd {
    display: inline;
    padding: 5px;
    border-radius: 2px;
    font: 14px var(--fontCode);
    color: #191919;
    background-color: #ebeced
}

/*_hljs*/
.hljs-comment,
.hljs-code,
.hljs-meta,
pre i.gray {
    color: var(--snGray)
}

.hljs-name,
.hljs-title,
.hljs-bullet,
.hljs-variable,
.hljs-template-variable,
.hljs-selector-id,
.hljs-selector-class,
.hljs-selector-tag,
.hljs-literal,
pre i.red {
    color: var(--snOrange)
}

.hljs-keyword,
.hljs-string,
.hljs-type,
.hljs-section,
.hljs-quote,
.hljs-built_in,
.hljs-builtin-name,
pre i.blue {
    color: var(--snBlue)
}

.hljs-attribute {
    color: var(--snPurple)
}

.hljs-params,
pre i.green {
    color: var(--snGreen)
}

.hljs-number,
.hljs-symbol {
    color: var(--snRed)
}

.hljs-regexp,
.hljs-link {
    color: var(--snGold)
}

.hljs-deletion {
    background-color: var(--warnBg);
    color: var(--warnT)
}

.hljs-addition {
    background-color: var(--noteBg);
    color: var(--noteT)
}

.hljs-strong {
    font-weight: 700
}

.hljs-code,
.hljs-emphasis {
    font-style: italic
}

/*_vid*/
.AMP .lazyYt {
    display: none
}

:is(.videoYt, .lazyYt) iframe {
    position: absolute;
    inset-block-start: 0;
    inset-inline: 0;
    width: 100%;
    height: 100%
}

.videoYt,
.lazyYt {
    position: relative;
    padding-block-start: 56.25%;
    border-radius: var(--mainBd-rad);
    background-color: var(--mainBg-dim);
    overflow: hidden
}

.lazyYt .play {
    --w: clamp(3.125rem, 2.022rem + 4.202vw, 4.375rem);
    display: block;
    width: var(--w);
    height: var(--w);
    inset-block-start: 50%;
    inset-inline-start: 50%;
    transform: translate(-50%, -50%);
    transition: all .3s ease
}

.lazyYt .play svg {
    --svg: inherit;
    fill: none;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-miterlimit: 10;
    stroke-width: 8
}

.lazyYt .play .c {
    stroke: rgb(255 255 255 / 90%);
    stroke-dasharray: 650;
    stroke-dashoffset: 650;
    transition: all .3s ease-in-out
}

.lazyYt .play .t {
    stroke: rgb(255 255 255 / 90%);
    stroke-dasharray: 240;
    stroke-dashoffset: 480;
    transition: all .3s ease-in-out
}

.lazyYt .play:hover .t {
    animation: nudge .6s ease-in-out
}

.lazyYt .play:hover :where(.t, .c) {
    stroke: rgb(255 255 255);
    stroke-dashoffset: 0
}

.lazyYt :is(.play, img) {
    position: absolute
}

.lazyYt img {
    inset-block-start: -16.84%;
    inset-inline: 0;
    width: 100%;
    border-radius: 0;
    z-index: -1
}

/* type: component(responsive) */
@media screen and (max-width:640px) {

    /*_img*/
    .pe img.full {
        max-width: none;
        border-radius: 0
    }

    .scImg {
        flex-wrap: nowrap;
        justify-content: flex-start;
        padding-inline: var(--mainPadding);
        overflow-y: hidden;
        overflow-x: scroll;
        scroll-behavior: smooth;
        scroll-snap-type: x mandatory;
        -ms-overflow-style: none
    }

    .scImg>* {
        flex: 0 0 80%;
        scroll-snap-align: center
    }

    /*_tabl*/
    .table {
        display: flex;
        padding-inline: var(--mainPadding)
    }
}

@media screen and (max-width:500px) {

    /*_img*/
    .pe img.full,
    .scImg,
    .table {
        position: relative;
        width: calc(100% + (var(--mainPadding) * 2));
        margin-inline: calc(var(--mainPadding) * -1)
    }

    :is(.hdImg, .shImg)>*,
    .grImg>*:first-child,
    .grImg>*:nth-child(6) {
        width: 100%
    }

    /*_parg*/
    .pe .separator a {
        display: block !important;
        margin: 0 !important
    }

    /*_btn*/
    .btnF>*:not(:first-child) {
        flex-grow: 1;
        justify-content: center
    }
}

/* style: demo/feature */
.maD {
    --g: 22px;
    gap: var(--g)
}

.maD>* {
    width: calc((100% / 3) - (var(--g) * 2/3))
}

.fp {
    --g: 20px;
    --b: #8775f5;
    gap: var(--g)
}

.fp>* {
    gap: 5px;
    width: calc((100% / 4) - (var(--g) * 3/4));
    padding: 18px;
    border: 1px solid var(--mainBg-gray);
    border-radius: var(--mainBd-rad);
    background-color: var(--mainBg);
    transition: border var(--tTime), box-shadow var(--tTime)
}

.fp>*:hover {
    border-color: var(--mainBd-color)
}

.fp>*:not(.m):hover {
    box-shadow: 0 0 0 .5px var(--mainBd-color) inset
}

.fp>*:not(.m) .t {
    font-size: clamp(.938rem, .883rem + .208vw, 1rem)
}

.fp .m {
    border-style: dashed
}

.fp .i {
    gap: 5px;
    margin-block-end: .65rem
}

/* style: component */
.coM {
    --g: 14px;
    gap: var(--g);
    margin-block-start: 1rem;
    line-height: 1.4
}

.coM>* {
    --p: 22px;
    gap: var(--p);
    width: calc((100% / 3) - (var(--g) * 2/3));
    padding: var(--p);
    border: 1px solid var(--mainBd-color);
    border-radius: var(--mainBd-rad);
    background-color: var(--mainBg);
    transition: box-shadow var(--tTime), transform var(--tTime)
}

.coM>*[for]:hover {
    box-shadow: 4px 4px var(--mainBd-color);
    transform: translate(-4px, -4px)
}

.coM .i {
    gap: 8px
}

.coM .i::after {
    content: attr(data-text)
}

.coM .im {
    --w: calc(100% + var(--p));
    width: var(--w);
    margin-inline: calc(var(--p) / -2);
    padding-top: var(--w);
    background-color: var(--coreBg-gray);
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    overflow: hidden
}

.coM noscript .im {
    display: block
}

.coM .in {
    gap: 6px
}

.coM .in .n {
    font-size: 1.035rem
}

.coM .in .n[data-text]::after {
    content: attr(data-text);
    display: inline-block;
    margin-inline-start: 6px;
    padding-block: 3px;
    padding-inline: 5px;
    border-radius: 2px;
    background-color: rgb(174 249 254 / 30%);
    font: 11px/1.2 var(--fontHead);
    vertical-align: top
}

.coM .in .d {
    line-height: 1.3
}

/* style: changelog */
.log {
    --enable: 'Enable';
    --added: 'Added';
    --optimized: 'Optimized';
    --remove: 'Removed';
    --improve: 'Improved';
    --fix: 'Fixed';
    --misc: 'Misc'
}

.log .v {
    margin-block: 0 12px
}

.log .v::after {
    content: attr(data-text);
    color: var(--coreT-dim);
    font: var(--fontMM) var(--fontCode)
}

.log ul {
    font: var(--fontM)/1.5 var(--fontCode)
}

.log ul:not(:first-child) {
    margin-block-start: 1rem
}

.log li {
    gap: 6px;
    padding-block-end: 4px
}

.log li::before {
    padding-block: 4px;
    padding-inline: 8px;
    border-radius: 2px;
    font: var(--fontMM)/1.6 var(--fontCode);
}

.log .g::before {
    color: #596a48;
    background-color: #e5f2e3
}

.log .r::before {
    color: #e51661;
    background-color: #fce8e8
}

.log .en::before {
    content: var(--enable)
}

.log .ad::before {
    content: var(--added)
}

.log .op::before {
    content: var(--optimized)
}

.log .re::before {
    content: var(--remove)
}

.log .im::before {
    content: var(--improve)
}

.log .fx::before {
    content: var(--fix)
}

.log .ms::before {
    content: var(--misc)
}

/* type: responsive */
@media screen and (max-width:896px) {

    /* type: demo/feature */
    .fp>* {
        width: calc((100% / 3) - (var(--g) * 2/3))
    }
}

@media screen and (min-width:768px) {

    /* Scrollbar custom */
    ::-webkit-scrollbar {
        -webkit-appearance: none;
        width: 4px;
        height: 5px
    }

    ::-webkit-scrollbar-track {
        background-color: transparent
    }

    ::-webkit-scrollbar-thumb {
        background-color: rgb(0 0 0 / 15%);
        border-radius: 10px
    }

    ::-webkit-scrollbar-thumb:hover {
        background-color: rgb(0 0 0 / 35%)
    }

    ::-webkit-scrollbar-thumb:active {
        background-color: rgb(0 0 0 / 35%)
    }
}

@media screen and (max-width:768px) {

    /* maF */
    .maF .max {
        column-gap: 2rem
    }

    .maFC {
        flex-shrink: 0;
        align-self: baseline
    }
}

@media screen and (max-width:640px) {

    /* var */
    .nB {
        --hedH: var(--hedH-mob);
        --posT-fontMax: var(--posT-fontMin);
        --posTi-fontMax: var(--posTi-fontMin);
        --posB-fontMax: var(--posB-fontMin)
    }

    /* elem: pop-up */
    .oP {
        align-items: flex-end
    }

    .oP .oPA {
        height: 100dvh;
        max-height: 100dvh
    }

    .oP .oPB {
        border-block-end: 0;
        border-inline: 0;
        border-radius: 0;
        padding-block: 0 calc(var(--opH) + var(--mainPadding))
    }

    .oP .oPH {
        position: static;
        padding-inline: 0
    }

    .oP .oPH::after {
        content: '';
        position: absolute;
        inset-block-end: 0;
        inset-inline: 0;
        height: var(--opH);
        background-color: inherit;
        border-block-start: 1px solid var(--coreBg-gray);
        z-index: 1
    }

    .oP .oPH .c {
        --icHeight: var(--opH);
        position: absolute;
        right: 0;
        inset-block-end: calc((var(--opH) - var(--icHeight)) / 2);
        min-width: 100px;
        padding-right: var(--mainPadding);
        z-index: 2
    }

    .oPH .c::before {
        margin-left: auto;
        font-size: var(--fontD);
        color: var(--coreLink);
        font-weight: 600
    }

    .oPH .c::after {
        display: none
    }

    /* maH */
    .maH .max {
        gap: 0
    }

    .maHM {
        display: flex;
        flex-direction: column;
        gap: 0;
        position: absolute;
        inset-block-start: 0;
        inset-inline-end: 0;
        min-width: 100px;
        max-width: 160px;
        padding: 10px 15px;
        border: var(--mainBd-line) solid var(--mainBd-color);
        border-radius: var(--mainBd-rad);
        background-color: var(--mainBg);
        transition: inset var(--tTime), transform var(--tTime), var(--tShow);
        box-shadow: 4px 4px var(--mainBd-color);
        transform: translate(-4px, -4px);
        opacity: 0;
        visibility: hidden;
        z-index: 2
    }

    .maHM li>* {
        display: inline-block;
        padding-block: 5px
    }

    .maHM .a::after {
        display: none
    }

    .forM:checked~.maHR .maHM {
        inset-block-start: 5px
    }

    .forM:checked~.maHR .maHM,
    .forM:checked~.maHR .mC::after {
        opacity: 1;
        visibility: visible
    }

    /* maL */
    .maLT {
        flex-wrap: wrap;
        text-align: start
    }

    /* type: Blog */
    :is(.boC.f, .coM)>* {
        width: calc((100% / 2) - (var(--g) / 2))
    }

    /* type: demo/feature */
    :is(.maD, .fp)>* {
        width: calc((100% / 2) - (var(--g) / 2))
    }

    .fp {
        gap: 12px
    }
}

@media screen and (max-width:500px) {

    /* type: Blog */
    :is(.boC.f, .coM)>* {
        width: 100%
    }

    /* type: demo/feature */
    :is(.maD, .fp)>* {
        width: 100%
    }
}

/* opt: effect */
@keyframes nudge {
    0% {
        transform: translateX(0)
    }

    30% {
        transform: translateX(-5px)
    }

    50% {
        transform: translateX(5px)
    }

    70% {
        transform: translateX(-2px)
    }

    100% {
        transform: translateX(0)
    }
}

@keyframes noT {
    0% {
        opacity: 0
    }

    10%,
    80% {
        opacity: 1;
        inset-block-end: var(--mainPadding)
    }

    100% {
        opacity: 0;
        inset-block-end: -100%;
        visibility: hidden
    }
}

/* opt: hide-scroll */
.scrlH::-webkit-scrollbar {
    width: 0;
    height: 0
}

.scrlH::-webkit-scrollbar-track {
    background-color: transparent
}

.scrlH::-webkit-scrollbar-thumb {
    background-color: transparent;
    border: none
}

/* opt: do not print */
@media print {
    .noPrint {
        display: none
    }
}

/* opt: do not copy */
/*body{user-select:none;-moz-user-select:none;-ms-user-select:none;-khtml-user-select:none;-webkit-user-select:none;-webkit-touch-callout:none} pre, code, kbd, i[rel=pre]{user-select:text;-moz-user-select:text;-ms-user-select:text;-khtml-user-select:text;-webkit-user-select:text;-webkit-touch-callout:text}*/